{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/NewTaskForm/newTaskForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: #0a1944;\\n  padding: 20px;\\n  border-radius: 8px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { Form, TextInput, Text } from '../../primitives';\nvar NewTaskSchema = yup.object().shape({\n  name: yup.string().required('Required').max(50, 'Too Long!'),\n  description: yup.string().max(300, 'Too Long!')\n});\nvar BaseForm = styled(Form.Form)(_templateObject());\nexport var NewTaskForm = function NewTaskForm(_ref) {\n  _s();\n\n  var _onSubmit = _ref.onSubmit;\n  var formik = useFormik({\n    initialValues: {\n      name: '',\n      description: ''\n    },\n    validationSchema: NewTaskSchema,\n    onSubmit: function onSubmit(values) {\n      return _onSubmit(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form.Form, {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Text.Subtitle, {\n      children: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      label: \"Name\",\n      error: formik.errors.name,\n      children: /*#__PURE__*/_jsxDEV(TextInput.Input, {\n        name: \"name\",\n        value: formik.values.name,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      label: \"Description\",\n      error: formik.errors.description,\n      children: /*#__PURE__*/_jsxDEV(TextInput.Area, {\n        name: \"description\",\n        value: formik.values.description,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NewTaskForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/NewTaskForm/newTaskForm.tsx"],"names":["React","useFormik","yup","styled","Form","TextInput","Text","NewTaskSchema","object","shape","name","string","required","max","description","BaseForm","NewTaskForm","onSubmit","formik","initialValues","validationSchema","values","handleSubmit","errors","handleChange"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,IAA1B,QAAsC,kBAAtC;AAOA,IAAMC,aAAa,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACvCC,EAAAA,IAAI,EAAER,GAAG,CAACS,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,EAAkCC,GAAlC,CAAsC,EAAtC,EAA0C,WAA1C,CADiC;AAEvCC,EAAAA,WAAW,EAAEZ,GAAG,CAACS,MAAJ,GAAaE,GAAb,CAAiB,GAAjB,EAAsB,WAAtB;AAF0B,CAAnB,CAAtB;AASA,IAAME,QAAQ,GAAGZ,MAAM,CAACC,IAAI,CAACA,IAAN,CAAT,mBAAd;AAMA,OAAO,IAAMY,WAAgD,GAAG,SAAnDA,WAAmD,OAE1D;AAAA;;AAAA,MADJC,SACI,QADJA,QACI;AACJ,MAAMC,MAAM,GAAGjB,SAAS,CAAoB;AAC1CkB,IAAAA,aAAa,EAAE;AACbT,MAAAA,IAAI,EAAE,EADO;AAEbI,MAAAA,WAAW,EAAE;AAFA,KAD2B;AAK1CM,IAAAA,gBAAgB,EAAEb,aALwB;AAM1CU,IAAAA,QAAQ,EAAE,kBAACI,MAAD;AAAA,aAAYJ,SAAQ,CAACI,MAAD,CAApB;AAAA;AANgC,GAApB,CAAxB;AAQA,sBACE,QAAC,IAAD,CAAM,IAAN;AAAW,IAAA,QAAQ,EAAEH,MAAM,CAACI,YAA5B;AAAA,4BACE,QAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAEJ,MAAM,CAACK,MAAP,CAAcb,IAA9C;AAAA,6BACE,QAAC,SAAD,CAAW,KAAX;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEQ,MAAM,CAACG,MAAP,CAAcX,IAFvB;AAGE,QAAA,QAAQ,EAAEQ,MAAM,CAACM;AAHnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF,eASE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,aAAlB;AAAgC,MAAA,KAAK,EAAEN,MAAM,CAACK,MAAP,CAAcT,WAArD;AAAA,6BACE,QAAC,SAAD,CAAW,IAAX;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,KAAK,EAAEI,MAAM,CAACG,MAAP,CAAcP,WAFvB;AAGE,QAAA,QAAQ,EAAEI,MAAM,CAACM;AAHnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aATF,eAgBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAoBD,CA/BM;;GAAMR,W;UAGIf,S;;;KAHJe,W","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { Form, TextInput, Text } from '../../primitives';\n\nexport interface NewTaskFormValues {\n  name: string;\n  description: string;\n}\n\nconst NewTaskSchema = yup.object().shape({\n  name: yup.string().required('Required').max(50, 'Too Long!'),\n  description: yup.string().max(300, 'Too Long!'),\n});\n\ninterface NewTaskFormProps {\n  onSubmit?: (values: NewTaskFormValues) => void;\n}\n\nconst BaseForm = styled(Form.Form)`\n  background-color: #0a1944;\n  padding: 20px;\n  border-radius: 8px;\n`;\n\nexport const NewTaskForm: FunctionComponent<NewTaskFormProps> = ({\n  onSubmit,\n}) => {\n  const formik = useFormik<NewTaskFormValues>({\n    initialValues: {\n      name: '',\n      description: '',\n    },\n    validationSchema: NewTaskSchema,\n    onSubmit: (values) => onSubmit(values),\n  });\n  return (\n    <Form.Form onSubmit={formik.handleSubmit}>\n      <Text.Subtitle>New Task</Text.Subtitle>\n      <Form.Field label=\"Name\" error={formik.errors.name}>\n        <TextInput.Input\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n        />\n      </Form.Field>\n      <Form.Field label=\"Description\" error={formik.errors.description}>\n        <TextInput.Area\n          name=\"description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n        />\n      </Form.Field>\n      <button type=\"submit\">Add Task</button>\n    </Form.Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}