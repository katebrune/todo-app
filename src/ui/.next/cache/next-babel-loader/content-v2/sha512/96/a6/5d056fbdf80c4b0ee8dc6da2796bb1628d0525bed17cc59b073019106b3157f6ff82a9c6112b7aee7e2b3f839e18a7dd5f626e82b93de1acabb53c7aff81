{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport { filter, check } from 'graphql-anywhere';\nimport { Card, Typography, Row, Col } from 'antd';\nimport { CompleteListDataFragmentDoc, InProgressListDataFragmentDoc, TaskCardDataFragmentDoc, TodoListDataFragmentDoc } from '../../typedDocumentNodes';\nimport { TaskCard } from '../TaskCard/taskCard';\nexport var TaskList = function TaskList(_ref) {\n  var data = _ref.data;\n\n  function isDocType(doc, data) {\n    var res;\n\n    try {\n      check(doc, data);\n    } catch (err) {\n      res = false;\n    } finally {\n      return res;\n    }\n  }\n\n  function isTodoList(data) {\n    return isDocType(TodoListDataFragmentDoc, data);\n  }\n\n  function isInProgressLIst(data) {\n    return isDocType(InProgressListDataFragmentDoc, data);\n  }\n\n  function isCompleteList(data) {\n    return isDocType(CompleteListDataFragmentDoc, data);\n  }\n\n  function getKey(data) {\n    if (data['todoTasks']) return 'todoTasks';\n    if (data['inProgressTasks']) return 'inProgressTasks';\n    if (data['completeTasks']) return 'completeTasks';\n    return 'viewTasks';\n  }\n\n  function getPageTitle(data) {\n    if (data['todoTasks']) return 'To Do';\n    if (data['inProgressTasks']) return 'In Progress';\n    if (data['completeTasks']) return 'Complete';\n    return 'All Tasks';\n  }\n\n  console.log('DATA', data);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: /*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 3,\n      children: getPageTitle(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, _this),\n    style: {\n      margin: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: data[getKey(data)].map(function (task, index) {\n          return /*#__PURE__*/_jsxDEV(TaskCard, {\n            data: filter(TaskCardDataFragmentDoc, task)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx"],"names":["React","filter","check","Card","Typography","Row","Col","CompleteListDataFragmentDoc","InProgressListDataFragmentDoc","TaskCardDataFragmentDoc","TodoListDataFragmentDoc","TaskCard","TaskList","data","isDocType","doc","res","err","isTodoList","isInProgressLIst","isCompleteList","getKey","getPageTitle","console","log","margin","map","task","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,MAA3C;AACA,SAEEC,2BAFF,EAIEC,6BAJF,EAKEC,uBALF,EAOEC,uBAPF,QAQO,0BARP;AASA,SAASC,QAAT,QAAyB,sBAAzB;AAIA,OAAO,IAAMC,QAA0C,GAAG,SAA7CA,QAA6C,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACtE,WAASC,SAAT,CAAmBC,GAAnB,EAAsCF,IAAtC,EAAiD;AAC/C,QAAIG,GAAJ;;AAEA,QAAI;AACFd,MAAAA,KAAK,CAACa,GAAD,EAAMF,IAAN,CAAL;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZD,MAAAA,GAAG,GAAG,KAAN;AACD,KAJD,SAIU;AACR,aAAOA,GAAP;AACD;AACF;;AAED,WAASE,UAAT,CAAoBL,IAApB,EAAwD;AACtD,WAAOC,SAAS,CAACJ,uBAAD,EAA0BG,IAA1B,CAAhB;AACD;;AAED,WAASM,gBAAT,CAA0BN,IAA1B,EAAoE;AAClE,WAAOC,SAAS,CAACN,6BAAD,EAAgCK,IAAhC,CAAhB;AACD;;AAED,WAASO,cAAT,CAAwBP,IAAxB,EAAgE;AAC9D,WAAOC,SAAS,CAACP,2BAAD,EAA8BM,IAA9B,CAAhB;AACD;;AAED,WAASQ,MAAT,CAAgBR,IAAhB,EAA8B;AAC5B,QAAIA,IAAI,CAAC,WAAD,CAAR,EAAuB,OAAO,WAAP;AACvB,QAAIA,IAAI,CAAC,iBAAD,CAAR,EAA6B,OAAO,iBAAP;AAC7B,QAAIA,IAAI,CAAC,eAAD,CAAR,EAA2B,OAAO,eAAP;AAC3B,WAAO,WAAP;AACD;;AACD,WAASS,YAAT,CAAsBT,IAAtB,EAAoC;AAClC,QAAIA,IAAI,CAAC,WAAD,CAAR,EAAuB,OAAO,OAAP;AACvB,QAAIA,IAAI,CAAC,iBAAD,CAAR,EAA6B,OAAO,aAAP;AAC7B,QAAIA,IAAI,CAAC,eAAD,CAAR,EAA2B,OAAO,UAAP;AAC3B,WAAO,WAAP;AACD;;AAEDU,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBX,IAApB;AACA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,eACH,QAAC,UAAD,CAAY,KAAZ;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAAA,gBAA6BS,YAAY,CAACT,IAAD;AAAzC;AAAA;AAAA;AAAA;AAAA,aAFJ;AAIE,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA,2BAME,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAA,kBACGZ,IAAI,CAACQ,MAAM,CAACR,IAAD,CAAP,CAAJ,CAAmBa,GAAnB,CAAuB,UAACC,IAAD,EAAOC,KAAP;AAAA,8BACtB,QAAC,QAAD;AAEE,YAAA,IAAI,EAAE3B,MAAM,CAACQ,uBAAD,EAA0BkB,IAA1B;AAFd,aACOC,KADP;AAAA;AAAA;AAAA;AAAA,mBADsB;AAAA,SAAvB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CA1DM;KAAMhB,Q","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { filter, check } from 'graphql-anywhere';\nimport { Card, Typography, Row, Col } from 'antd';\nimport {\n  CompleteListDataFragment,\n  CompleteListDataFragmentDoc,\n  InProgressListDataFragment,\n  InProgressListDataFragmentDoc,\n  TaskCardDataFragmentDoc,\n  TodoListDataFragment,\n  TodoListDataFragmentDoc,\n} from '../../typedDocumentNodes';\nimport { TaskCard } from '../TaskCard/taskCard';\nimport { TaskListProps } from './interfaces';\nimport { DocumentNode } from 'graphql';\n\nexport const TaskList: FunctionComponent<TaskListProps> = ({ data }) => {\n  function isDocType(doc: DocumentNode, data: any) {\n    let res;\n\n    try {\n      check(doc, data);\n    } catch (err) {\n      res = false;\n    } finally {\n      return res;\n    }\n  }\n\n  function isTodoList(data): data is TodoListDataFragment {\n    return isDocType(TodoListDataFragmentDoc, data);\n  }\n\n  function isInProgressLIst(data): data is InProgressListDataFragment {\n    return isDocType(InProgressListDataFragmentDoc, data);\n  }\n\n  function isCompleteList(data): data is CompleteListDataFragment {\n    return isDocType(CompleteListDataFragmentDoc, data);\n  }\n\n  function getKey(data): string {\n    if (data['todoTasks']) return 'todoTasks';\n    if (data['inProgressTasks']) return 'inProgressTasks';\n    if (data['completeTasks']) return 'completeTasks';\n    return 'viewTasks';\n  }\n  function getPageTitle(data): string {\n    if (data['todoTasks']) return 'To Do';\n    if (data['inProgressTasks']) return 'In Progress';\n    if (data['completeTasks']) return 'Complete';\n    return 'All Tasks';\n  }\n\n  console.log('DATA', data);\n  return (\n    <Card\n      title={\n        <Typography.Title level={3}>{getPageTitle(data)}</Typography.Title>\n      }\n      style={{ margin: '20px' }}\n    >\n      <Row>\n        <Col>\n          {data[getKey(data)].map((task, index) => (\n            <TaskCard\n              key={index}\n              data={filter(TaskCardDataFragmentDoc, task)}\n            />\n          ))}\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}