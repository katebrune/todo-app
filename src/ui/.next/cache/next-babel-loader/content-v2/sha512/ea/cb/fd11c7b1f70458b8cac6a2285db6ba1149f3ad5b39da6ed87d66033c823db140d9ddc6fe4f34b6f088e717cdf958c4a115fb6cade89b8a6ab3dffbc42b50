{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx\";\nimport { gql } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport React from 'react';\nimport { TaskCard } from '../TaskCard/taskCard';\nexport const TaskList = ({\n  data\n}) => {\n  console.log('DATA', data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.viewTasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n      data: filter(TaskCard.fragments.details, task)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\nTaskList.fragments = {\n  tasks: gql`\n    fragment Tasks on Query {\n      viewTasks {\n        ...Details\n      }\n    }\n    ${TaskCard.fragments.details}\n  `\n};","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx"],"names":["gql","filter","React","TaskCard","TaskList","data","console","log","viewTasks","map","task","index","fragments","details","tasks"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AAMA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,sBACE;AAAA,cACGA,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,kBAClB,QAAC,QAAD;AAAsB,MAAA,IAAI,EAAEV,MAAM,CAACE,QAAQ,CAACS,SAAT,CAAmBC,OAApB,EAA6BH,IAA7B;AAAlC,OAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAOD,CATM;AAWPP,QAAQ,CAACQ,SAAT,GAAqB;AACnBE,EAAAA,KAAK,EAAEd,GAAI;AACb;AACA;AACA;AACA;AACA;AACA,MAAMG,QAAQ,CAACS,SAAT,CAAmBC,OAAQ;AACjC;AARqB,CAArB","sourcesContent":["import { gql } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport React from 'react';\nimport { Task } from '../../../shared/types/graphql';\nimport { TaskCard } from '../TaskCard/taskCard';\n\ninterface TaskListProps {\n  data: { viewTasks: Task[] };\n}\n\nexport const TaskList = ({ data }: TaskListProps) => {\n  console.log('DATA', data);\n  return (\n    <>\n      {data.viewTasks.map((task, index) => (\n        <TaskCard key={index} data={filter(TaskCard.fragments.details, task)} />\n      ))}\n    </>\n  );\n};\n\nTaskList.fragments = {\n  tasks: gql`\n    fragment Tasks on Query {\n      viewTasks {\n        ...Details\n      }\n    }\n    ${TaskCard.fragments.details}\n  `,\n};\n"]},"metadata":{},"sourceType":"module"}