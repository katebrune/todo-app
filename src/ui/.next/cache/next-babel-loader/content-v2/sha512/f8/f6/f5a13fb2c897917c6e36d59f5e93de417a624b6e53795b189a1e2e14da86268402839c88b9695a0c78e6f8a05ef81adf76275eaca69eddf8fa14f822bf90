{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/client/pages/tasks.tsx\",\n    _this = this;\n\nimport React from 'react';\n\nvar TasksPage = function TasksPage(_ref) {\n  var tasks = _ref.tasks;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), tasks.map(function (task) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true);\n};\n\n_c = TasksPage;\nexport var __N_SSP = true;\nexport default TasksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/client/pages/tasks.tsx"],"names":["React","TasksPage","tasks","map","task","name","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AASA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACzD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,0BACT;AAAA,gCACE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV,CAFH;AAAA,kBADF;AAWD,CAZD;;KAAML,S;;AAmCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport { Task } from '../../shared/types/graphql';\n\ninterface TasksPageProps {\n  tasks?: Task[];\n}\n\nconst TasksPage: NextPage<TasksPageProps> = ({ tasks }) => {\n  return (\n    <>\n      <h1>Tasks</h1>\n      {tasks.map((task) => (\n        <div>\n          <h6>{task.name}</h6>\n          <p>{task.description}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache(),\n  });\n\n  const res = await client.query<{ viewTasks: Task[] }>({\n    query: gql`\n      query GetTasks {\n        viewTasks {\n          name\n          description\n        }\n      }\n    `,\n  });\n\n  console.log(res);\n  return { props: { tasks: res.data.viewTasks } };\n};\n\nexport default TasksPage;\n"]},"metadata":{},"sourceType":"module"}