{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Tasks on Query {\\n      viewTasks {\\n        ...Details\\n      }\\n    }\\n    \", \"\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport React from 'react';\nimport { TaskCard } from '../TaskCard/taskCard';\nexport var TaskList = function TaskList(_ref) {\n  var data = _ref.data;\n  console.log('DATA', data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.viewTasks.map(function (task, index) {\n      return /*#__PURE__*/_jsxDEV(TaskCard, {\n        data: filter(TaskCard.fragments.details, task)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n};\n_c = TaskList;\nTaskList.fragments = {\n  tasks: gql(_templateObject(), TaskCard.fragments.details)\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx"],"names":["gql","filter","React","TaskCard","TaskList","data","console","log","viewTasks","map","task","index","fragments","details","tasks"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AAMA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA6B;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,sBACE;AAAA,cACGA,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,UAACC,IAAD,EAAOC,KAAP;AAAA,0BAClB,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAEV,MAAM,CAACE,QAAQ,CAACS,SAAT,CAAmBC,OAApB,EAA6BH,IAA7B;AAAlC,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,eADkB;AAAA,KAAnB;AADH,mBADF;AAOD,CATM;KAAMP,Q;AAWbA,QAAQ,CAACQ,SAAT,GAAqB;AACnBE,EAAAA,KAAK,EAAEd,GAAF,oBAMDG,QAAQ,CAACS,SAAT,CAAmBC,OANlB;AADc,CAArB","sourcesContent":["import { gql } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport React from 'react';\nimport { Task } from '../../../shared/types/graphql';\nimport { TaskCard } from '../TaskCard/taskCard';\n\ninterface TaskListProps {\n  data: { viewTasks: Task[] };\n}\n\nexport const TaskList = ({ data }: TaskListProps) => {\n  console.log('DATA', data);\n  return (\n    <>\n      {data.viewTasks.map((task, index) => (\n        <TaskCard key={index} data={filter(TaskCard.fragments.details, task)} />\n      ))}\n    </>\n  );\n};\n\nTaskList.fragments = {\n  tasks: gql`\n    fragment Tasks on Query {\n      viewTasks {\n        ...Details\n      }\n    }\n    ${TaskCard.fragments.details}\n  `,\n};\n"]},"metadata":{},"sourceType":"module"}