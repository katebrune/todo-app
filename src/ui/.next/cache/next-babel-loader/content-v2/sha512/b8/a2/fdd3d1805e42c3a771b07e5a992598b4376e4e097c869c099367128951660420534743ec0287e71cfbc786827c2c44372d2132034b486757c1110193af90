{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx\";\nimport React from 'react';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport { TaskList } from '../components/TaskList/taskList';\nimport { CompleteListDataFragmentDoc, HomePageDocument, TodoListDataFragmentDoc } from '../typedDocumentNodes';\n\nconst Home = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      data: filter(TodoListDataFragmentDoc, data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      data: filter(CompleteListDataFragmentDoc, data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      data: filter(CompleteListDataFragmentDoc, data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache()\n  });\n  console.log('QUERY', HomePageDocument);\n  const res = await client.query({\n    query: HomePageDocument\n  });\n  return {\n    props: res\n  };\n};\nexport default Home;","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx"],"names":["React","ApolloClient","InMemoryCache","filter","TaskList","CompleteListDataFragmentDoc","HomePageDocument","TodoListDataFragmentDoc","Home","data","getServerSideProps","client","uri","cache","console","log","res","query","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SACEC,2BADF,EAEEC,gBAFF,EAKEC,uBALF,QAMO,uBANP;;AAYA,MAAMC,IAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAClD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEN,MAAM,CAACI,uBAAD,EAA0BE,IAA1B;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEN,MAAM,CAACE,2BAAD,EAA8BI,IAA9B;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEN,MAAM,CAACE,2BAAD,EAA8BI,IAA9B;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CATD;;AAWA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,MAAM,GAAG,IAAIV,YAAJ,CAAiB;AAC9BW,IAAAA,GAAG,EAAE,+BADyB;AAE9BC,IAAAA,KAAK,EAAE,IAAIX,aAAJ;AAFuB,GAAjB,CAAf;AAKAY,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,gBAArB;AAEA,QAAMU,GAAG,GAAG,MAAML,MAAM,CAACM,KAAP,CAA4B;AAC5CA,IAAAA,KAAK,EAAEX;AADqC,GAA5B,CAAlB;AAIA,SAAO;AAAEY,IAAAA,KAAK,EAAEF;AAAT,GAAP;AACD,CAbM;AAeP,eAAeR,IAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport { TaskList } from '../components/TaskList/taskList';\nimport {\n  CompleteListDataFragmentDoc,\n  HomePageDocument,\n  HomePageQuery,\n  InProgressListDataFragmentDoc,\n  TodoListDataFragmentDoc,\n} from '../typedDocumentNodes';\n\ninterface HomePageProps {\n  data: HomePageQuery;\n}\n\nconst Home: NextPage<HomePageProps> = ({ data }) => {\n  return (\n    <>\n      <h1>Hello, World!</h1>\n      <TaskList data={filter(TodoListDataFragmentDoc, data)} />\n      <TaskList data={filter(CompleteListDataFragmentDoc, data)} />\n      <TaskList data={filter(CompleteListDataFragmentDoc, data)} />\n    </>\n  );\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache(),\n  });\n\n  console.log('QUERY', HomePageDocument);\n\n  const res = await client.query<HomePageQuery>({\n    query: HomePageDocument,\n  });\n\n  return { props: res };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}