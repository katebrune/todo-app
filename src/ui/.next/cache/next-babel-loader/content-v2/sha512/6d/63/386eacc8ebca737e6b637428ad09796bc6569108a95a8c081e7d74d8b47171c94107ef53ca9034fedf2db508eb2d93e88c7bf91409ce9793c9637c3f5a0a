{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx\";\nimport React from 'react';\nimport { filter, check } from 'graphql-anywhere';\nimport { TaskCardDataFragmentDoc } from '../../typedDocumentNodes';\nimport { TaskCard } from '../TaskCard/taskCard';\nexport const TaskList = ({\n  data\n}) => {\n  function isDocType(doc, data) {\n    let res = true;\n\n    try {\n      check(doc, data);\n    } catch (e) {}\n  }\n\n  function isTodoList(data) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.completeTasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n      data: filter(TaskCardDataFragmentDoc, task)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx"],"names":["React","filter","check","TaskCardDataFragmentDoc","TaskCard","TaskList","data","isDocType","doc","res","e","isTodoList","completeTasks","map","task","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAEEC,uBAFF,QAKO,0BALP;AAMA,SAASC,QAAT,QAAyB,sBAAzB;AAIA,OAAO,MAAMC,QAA0C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACtE,WAASC,SAAT,CAAmBC,GAAnB,EAAsCF,IAAtC,EAAiD;AAC/C,QAAIG,GAAG,GAAG,IAAV;;AACA,QAAI;AACFP,MAAAA,KAAK,CAACM,GAAD,EAAMF,IAAN,CAAL;AACD,KAFD,CAEE,OAAOI,CAAP,EAAU,CAAE;AACf;;AAED,WAASC,UAAT,CAAoBL,IAApB,EAAkE,CAAE;;AAEpE,sBACE;AAAA,cACGA,IAAI,CAACM,aAAL,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,kBACtB,QAAC,QAAD;AAAsB,MAAA,IAAI,EAAEd,MAAM,CAACE,uBAAD,EAA0BW,IAA1B;AAAlC,OAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAOD,CAjBM","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { filter, check } from 'graphql-anywhere';\nimport {\n  InProgressListDataFragment,\n  TaskCardDataFragmentDoc,\n  TodoListDataFragment,\n  TodoListDataFragmentDoc,\n} from '../../typedDocumentNodes';\nimport { TaskCard } from '../TaskCard/taskCard';\nimport { TaskListProps, ListType } from './interfaces';\nimport { DocumentNode } from 'graphql';\n\nexport const TaskList: FunctionComponent<TaskListProps> = ({ data }) => {\n  function isDocType(doc: DocumentNode, data: any) {\n    let res = true;\n    try {\n      check(doc, data);\n    } catch (e) {}\n  }\n\n  function isTodoList(data: ListType): data is TodoListDataFragment {}\n\n  return (\n    <>\n      {data.completeTasks.map((task, index) => (\n        <TaskCard key={index} data={filter(TaskCardDataFragmentDoc, task)} />\n      ))}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}