{"ast":null,"code":"/** All built-in and custom scalars, mapped to their actual values */\n\n/** entity representing a task */\nexport const TaskCardDataFragmentDoc = {\n  \"kind\": \"Document\",\n  \"definitions\": [{\n    \"kind\": \"FragmentDefinition\",\n    \"name\": {\n      \"kind\": \"Name\",\n      \"value\": \"TaskCardData\"\n    },\n    \"typeCondition\": {\n      \"kind\": \"NamedType\",\n      \"name\": {\n        \"kind\": \"Name\",\n        \"value\": \"Task\"\n      }\n    },\n    \"selectionSet\": {\n      \"kind\": \"SelectionSet\",\n      \"selections\": [{\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"name\"\n        }\n      }, {\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"description\"\n        }\n      }, {\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"status\"\n        }\n      }]\n    }\n  }]\n};\nexport const TaskListDataFragmentDoc = {\n  \"kind\": \"Document\",\n  \"definitions\": [{\n    \"kind\": \"FragmentDefinition\",\n    \"name\": {\n      \"kind\": \"Name\",\n      \"value\": \"TaskListData\"\n    },\n    \"typeCondition\": {\n      \"kind\": \"NamedType\",\n      \"name\": {\n        \"kind\": \"Name\",\n        \"value\": \"Query\"\n      }\n    },\n    \"selectionSet\": {\n      \"kind\": \"SelectionSet\",\n      \"selections\": [{\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"viewTasks\"\n        },\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"FragmentSpread\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"TaskCardData\"\n            }\n          }]\n        }\n      }]\n    }\n  }, ...TaskCardDataFragmentDoc.definitions]\n};","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/typedDocumentNodes.ts"],"names":["TaskCardDataFragmentDoc","TaskListDataFragmentDoc","definitions"],"mappings":"AAKA;;AAeA;AA0BA,OAAO,MAAMA,uBAAoE,GAAG;AAAC,UAAO,UAAR;AAAmB,iBAAc,CAAC;AAAC,YAAO,oBAAR;AAA6B,YAAO;AAAC,cAAO,MAAR;AAAe,eAAQ;AAAvB,KAApC;AAA2E,qBAAgB;AAAC,cAAO,WAAR;AAAoB,cAAO;AAAC,gBAAO,MAAR;AAAe,iBAAQ;AAAvB;AAA3B,KAA3F;AAAsJ,oBAAe;AAAC,cAAO,cAAR;AAAuB,oBAAa,CAAC;AAAC,gBAAO,OAAR;AAAgB,gBAAO;AAAC,kBAAO,MAAR;AAAe,mBAAQ;AAAvB;AAAvB,OAAD,EAAwD;AAAC,gBAAO,OAAR;AAAgB,gBAAO;AAAC,kBAAO,MAAR;AAAe,mBAAQ;AAAvB;AAAvB,OAAxD,EAAsH;AAAC,gBAAO,OAAR;AAAgB,gBAAO;AAAC,kBAAO,MAAR;AAAe,mBAAQ;AAAvB;AAAvB,OAAtH;AAApC;AAArK,GAAD;AAAjC,CAA7E;AACP,OAAO,MAAMC,uBAAoE,GAAG;AAAC,UAAO,UAAR;AAAmB,iBAAc,CAAC;AAAC,YAAO,oBAAR;AAA6B,YAAO;AAAC,cAAO,MAAR;AAAe,eAAQ;AAAvB,KAApC;AAA2E,qBAAgB;AAAC,cAAO,WAAR;AAAoB,cAAO;AAAC,gBAAO,MAAR;AAAe,iBAAQ;AAAvB;AAA3B,KAA3F;AAAuJ,oBAAe;AAAC,cAAO,cAAR;AAAuB,oBAAa,CAAC;AAAC,gBAAO,OAAR;AAAgB,gBAAO;AAAC,kBAAO,MAAR;AAAe,mBAAQ;AAAvB,SAAvB;AAA2D,wBAAe;AAAC,kBAAO,cAAR;AAAuB,wBAAa,CAAC;AAAC,oBAAO,gBAAR;AAAyB,oBAAO;AAAC,sBAAO,MAAR;AAAe,uBAAQ;AAAvB;AAAhC,WAAD;AAApC;AAA1E,OAAD;AAApC;AAAtK,GAAD,EAAyY,GAAGD,uBAAuB,CAACE,WAApa;AAAjC,CAA7E","sourcesContent":["import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** query that returns all tasks */\n  viewTasks?: Maybe<Array<Maybe<Task>>>;\n};\n\n/** entity representing a task */\nexport type Task = {\n  __typename?: 'Task';\n  /** task id */\n  id: Scalars['String'];\n  /** the name of the task */\n  name: Scalars['String'];\n  /** a description of the task */\n  description: Scalars['String'];\n  /** the status of the task (TODO, IN_PROGRESS, COMPLETE) */\n  status: Scalars['String'];\n};\n\nexport type TaskCardDataFragment = (\n  { __typename?: 'Task' }\n  & Pick<Task, 'name' | 'description' | 'status'>\n);\n\nexport type TaskListDataFragment = (\n  { __typename?: 'Query' }\n  & { viewTasks?: Maybe<Array<Maybe<(\n    { __typename?: 'Task' }\n    & TaskCardDataFragment\n  )>>> }\n);\n\nexport const TaskCardDataFragmentDoc: DocumentNode<TaskCardDataFragment, unknown> = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"TaskCardData\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Task\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"status\"}}]}}]};\nexport const TaskListDataFragmentDoc: DocumentNode<TaskListDataFragment, unknown> = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"TaskListData\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"viewTasks\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"TaskCardData\"}}]}}]}},...TaskCardDataFragmentDoc.definitions]};"]},"metadata":{},"sourceType":"module"}