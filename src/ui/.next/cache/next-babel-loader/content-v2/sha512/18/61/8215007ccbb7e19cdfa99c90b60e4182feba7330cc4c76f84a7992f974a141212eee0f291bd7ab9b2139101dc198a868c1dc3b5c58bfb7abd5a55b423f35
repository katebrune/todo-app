{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport { Flex, Checkbox, Text, Card } from '../../primitives';\nimport { UPDATE_TASK_STATUS } from '../../mutations/updateTaskStatus';\nconst TitleRow = styled(Flex.Row)`\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const TaskCard = ({\n  data\n}) => {\n  const {\n    id,\n    name,\n    description,\n    status\n  } = data;\n  const router = useRouter();\n  const [updateTaskStatus] = useMutation(UPDATE_TASK_STATUS);\n\n  function refreshData() {\n    router.replace(router.asPath);\n  }\n\n  async function updateStatus() {\n    const udpatedStatus = status === 'COMPLETE' ? 'TODO' : 'COMPLETE';\n    await updateTaskStatus({\n      variables: {\n        id: id,\n        status: udpatedStatus\n      }\n    });\n    refreshData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    complete: status === 'COMPLETE',\n    title: /*#__PURE__*/_jsxDEV(TitleRow, {\n      children: [/*#__PURE__*/_jsxDEV(Text.Subtitle, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: status === 'COMPLETE',\n        onChange: updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this),\n    content: /*#__PURE__*/_jsxDEV(Text.Text, {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx"],"names":["React","useRouter","styled","useMutation","Flex","Checkbox","Text","Card","UPDATE_TASK_STATUS","TitleRow","Row","TaskCard","data","id","name","description","status","router","updateTaskStatus","refreshData","replace","asPath","updateStatus","udpatedStatus","variables"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,IAA/B,QAA2C,kBAA3C;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AAKA,MAAMC,QAAQ,GAAGP,MAAM,CAACE,IAAI,CAACM,GAAN,CAAW;AAClC;AACA;AACA,CAHA;AAKA,OAAO,MAAMC,QAA0C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACtE,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,MAAoCJ,IAA1C;AACA,QAAMK,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAM,CAACiB,gBAAD,IAAqBf,WAAW,CAACK,kBAAD,CAAtC;;AAEA,WAASW,WAAT,GAAuB;AACrBF,IAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,MAAtB;AACD;;AACD,iBAAeC,YAAf,GAA8B;AAC5B,UAAMC,aAAa,GAAGP,MAAM,KAAK,UAAX,GAAwB,MAAxB,GAAiC,UAAvD;AAEA,UAAME,gBAAgB,CAAC;AACrBM,MAAAA,SAAS,EAAE;AACTX,QAAAA,EAAE,EAAEA,EADK;AAETG,QAAAA,MAAM,EAAEO;AAFC;AADU,KAAD,CAAtB;AAMAJ,IAAAA,WAAW;AACZ;;AACD,sBACE,QAAC,IAAD;AACE,IAAA,QAAQ,EAAEH,MAAM,KAAK,UADvB;AAEE,IAAA,KAAK,eACH,QAAC,QAAD;AAAA,8BACE,QAAC,IAAD,CAAM,QAAN;AAAA,kBAAgBF;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEE,MAAM,KAAK,UAA9B;AAA0C,QAAA,QAAQ,EAAEM;AAApD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAQE,IAAA,OAAO,eAAE,QAAC,IAAD,CAAM,IAAN;AAAA,gBAAYP;AAAZ;AAAA;AAAA;AAAA;AAAA;AARX;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/BM","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { TaskCardDataFragment } from '../../typedDocumentNodes';\nimport { useMutation } from '@apollo/client';\nimport { Flex, Checkbox, Text, Card } from '../../primitives';\nimport { UPDATE_TASK_STATUS } from '../../mutations/updateTaskStatus';\nexport interface TaskCardProps {\n  data: TaskCardDataFragment;\n}\n\nconst TitleRow = styled(Flex.Row)`\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TaskCard: FunctionComponent<TaskCardProps> = ({ data }) => {\n  const { id, name, description, status } = data;\n  const router = useRouter();\n  const [updateTaskStatus] = useMutation(UPDATE_TASK_STATUS);\n\n  function refreshData() {\n    router.replace(router.asPath);\n  }\n  async function updateStatus() {\n    const udpatedStatus = status === 'COMPLETE' ? 'TODO' : 'COMPLETE';\n\n    await updateTaskStatus({\n      variables: {\n        id: id,\n        status: udpatedStatus,\n      },\n    });\n    refreshData();\n  }\n  return (\n    <Card\n      complete={status === 'COMPLETE'}\n      title={\n        <TitleRow>\n          <Text.Subtitle>{name}</Text.Subtitle>\n          <Checkbox checked={status === 'COMPLETE'} onChange={updateStatus} />\n        </TitleRow>\n      }\n      content={<Text.Text>{description}</Text.Text>}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}