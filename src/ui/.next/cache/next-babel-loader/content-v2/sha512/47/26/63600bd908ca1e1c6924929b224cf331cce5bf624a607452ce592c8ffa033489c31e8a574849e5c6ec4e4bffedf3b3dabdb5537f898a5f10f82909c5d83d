{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx\";\nimport gql from 'graphql-tag';\nimport React from 'react';\nexport const TaskCard = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Status: \", data.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: data.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nTaskCard.fragments = {\n  details: gql`\n    fragment Details on Task {\n      name\n      description\n      status\n    }\n  `\n};","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx"],"names":["gql","React","TaskCard","data","name","status","description","fragments","details"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAUA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AACnD,sBACE;AAAA,4BACE;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAaD,IAAI,CAACE,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CARM;AAUPJ,QAAQ,CAACK,SAAT,GAAqB;AACnBC,EAAAA,OAAO,EAAER,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AAPqB,CAArB","sourcesContent":["import gql from 'graphql-tag';\nimport React from 'react';\n\nexport interface TaskCardProps {\n  data: {\n    name: string;\n    description: string;\n    status: string;\n  };\n}\n\nexport const TaskCard = ({ data }: TaskCardProps) => {\n  return (\n    <>\n      <h4>{data.name}</h4>\n      <h5>Status: {data.status}</h5>\n      <h6>{data.description}</h6>\n    </>\n  );\n};\n\nTaskCard.fragments = {\n  details: gql`\n    fragment Details on Task {\n      name\n      description\n      status\n    }\n  `,\n};\n"]},"metadata":{},"sourceType":"module"}