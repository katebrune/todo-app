{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx\";\nimport React from 'react';\nimport { filter } from 'graphql-anywhere';\nimport { TaskCardDataFragmentDoc } from '../../typedDocumentNodes';\nimport { TaskCard } from '../TaskCard/taskCard';\nexport const TaskList = ({\n  data\n}) => {\n  function isTodoList(obj) {\n    return obj.todoList !== undefined;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.completeTasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n      data: filter(TaskCardDataFragmentDoc, task)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx"],"names":["React","filter","TaskCardDataFragmentDoc","TaskCard","TaskList","data","isTodoList","obj","todoList","undefined","completeTasks","map","task","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SACEC,uBADF,QAGO,0BAHP;AAIA,SAASC,QAAT,QAAyB,sBAAzB;AAGA,OAAO,MAAMC,QAA0C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACtE,WAASC,UAAT,CAAoBC,GAApB,EAAgE;AAC9D,WAAOA,GAAG,CAACC,QAAJ,KAAiBC,SAAxB;AACD;;AAED,sBACE;AAAA,cACGJ,IAAI,CAACK,aAAL,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,kBACtB,QAAC,QAAD;AAAsB,MAAA,IAAI,EAAEZ,MAAM,CAACC,uBAAD,EAA0BU,IAA1B;AAAlC,OAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAOD,CAZM","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { filter } from 'graphql-anywhere';\nimport {\n  TaskCardDataFragmentDoc,\n  TodoListDataFragment,\n} from '../../typedDocumentNodes';\nimport { TaskCard } from '../TaskCard/taskCard';\nimport { TaskListProps, ListType } from './interfaces';\n\nexport const TaskList: FunctionComponent<TaskListProps> = ({ data }) => {\n  function isTodoList(obj: ListType): obj is TodoListDataFragment {\n    return obj.todoList !== undefined;\n  }\n\n  return (\n    <>\n      {data.completeTasks.map((task, index) => (\n        <TaskCard key={index} data={filter(TaskCardDataFragmentDoc, task)} />\n      ))}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}