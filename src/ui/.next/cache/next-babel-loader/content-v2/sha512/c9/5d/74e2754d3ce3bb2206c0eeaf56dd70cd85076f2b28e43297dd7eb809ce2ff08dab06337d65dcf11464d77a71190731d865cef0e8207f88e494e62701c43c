{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport { filter } from 'graphql-anywhere';\nimport { TaskList } from '../components/TaskList/taskList';\n\nvar Home = function Home(_ref) {\n  var data = _ref.data;\n  var tasks = filter(TaskList.fragments.tasks, data);\n  console.log(tasks);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx"],"names":["React","filter","TaskList","Home","data","tasks","fragments","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,SAASC,QAAT,QAAyB,iCAAzB;;AAaA,IAAMC,IAA6B,GAAG,SAAhCA,IAAgC,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAClD,MAAMC,KAAK,GAAGJ,MAAM,CAACC,QAAQ,CAACI,SAAT,CAAmBD,KAApB,EAA2BD,IAA3B,CAApB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA,kBADF;AAOD,CAVD;;KAAMF,I;;AA0BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport { Task } from '../../shared/types/graphql';\nimport { TaskList } from '../components/TaskList/taskList';\n\ninterface HomePageProps {\n  data: any;\n}\n\nconst HOME_PAGE_QUERY = gql`\n  query HomePageQuery {\n    ...Tasks\n  }\n  ${TaskList.fragments.tasks}\n`;\n\nconst Home: NextPage<HomePageProps> = ({ data }) => {\n  const tasks = filter(TaskList.fragments.tasks, data);\n  console.log(tasks);\n  return (\n    <>\n      <h1>Hello, World!</h1>\n      <h2>Tasks:</h2>\n      <TaskList tasks={tasks} />\n    </>\n  );\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache(),\n  });\n\n  const res = await client.query<{ viewTasks: Task[] }>({\n    query: HOME_PAGE_QUERY,\n  });\n\n  const { data } = res;\n  return { props: { data: data } };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}