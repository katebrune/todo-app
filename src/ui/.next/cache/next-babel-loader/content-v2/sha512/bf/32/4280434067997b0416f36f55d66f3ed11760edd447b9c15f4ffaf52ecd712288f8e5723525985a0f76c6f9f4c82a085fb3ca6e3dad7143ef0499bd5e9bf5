{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx\";\nimport React from 'react';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { TaskList, TaskListQuery } from '../components/TaskList/taskList';\n\nconst Home = ({\n  tasks\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache()\n  });\n  const res = await client.query({\n    query: TaskListQuery\n  });\n  const {\n    viewTasks\n  } = res.data;\n  return {\n    props: {\n      tasks: viewTasks\n    }\n  };\n};\nexport default Home;","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx"],"names":["React","ApolloClient","InMemoryCache","TaskList","TaskListQuery","Home","tasks","getServerSideProps","client","uri","cache","res","query","viewTasks","data","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAAiD,gBAAjD;AAEA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,iCAAxC;;AAMA,MAAMC,IAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACnD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CARD;;AAUA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BQ,IAAAA,GAAG,EAAE,+BADyB;AAE9BC,IAAAA,KAAK,EAAE,IAAIR,aAAJ;AAFuB,GAAjB,CAAf;AAKA,QAAMS,GAAG,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAoC;AACpDA,IAAAA,KAAK,EAAER;AAD6C,GAApC,CAAlB;AAIA,QAAM;AAAES,IAAAA;AAAF,MAAgBF,GAAG,CAACG,IAA1B;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAET,MAAAA,KAAK,EAAEO;AAAT;AAAT,GAAP;AACD,CAZM;AAcP,eAAeR,IAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport { Task } from '../../shared/types/graphql';\nimport { TaskList, TaskListQuery } from '../components/TaskList/taskList';\n\ninterface HomePageProps {\n  tasks: Task[];\n}\n\nconst Home: NextPage<HomePageProps> = ({ tasks }) => {\n  return (\n    <>\n      <h1>Hello, World!</h1>\n      <h2>Tasks:</h2>\n      <TaskList tasks={tasks} />\n    </>\n  );\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache(),\n  });\n\n  const res = await client.query<{ viewTasks: Task[] }>({\n    query: TaskListQuery,\n  });\n\n  const { viewTasks } = res.data;\n  return { props: { tasks: viewTasks } };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}