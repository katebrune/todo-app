{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n        mutation updateTaskStatus($id: Int!, $status: String!) {\\n          updateTask(id: $id, status: $status) {\\n            name\\n            description\\n            status\\n          }\\n        }\\n      \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: #97b4ff;\\n  border-bottom: 2px solid #97b4ff;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n  color: #ffffff;\\n  font-weight: bold;\\n  font-size: 1.5em;\\n  border-bottom: 2px solid #8916ff;\\n  margin: 5px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n  color: #97b4ff;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  padding: 0 0 32px;\\n  margin: 20px;\\n  margin-left: 100px;\\n  width: 300px;\\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.05), 0 0px 40px rgba(0, 0, 0, 0.08);\\n  border-radius: 20px;\\n  background-color: #0a1944;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\nimport { Flex, Checkbox, Text } from '../../primitives';\nvar BaseCard = styled.div(_templateObject());\n_c = BaseCard;\nvar BaseContent = styled.div(_templateObject2());\n_c2 = BaseContent;\nvar BaseTitle = styled.div(_templateObject3());\n_c3 = BaseTitle;\nvar CompleteTitle = styled(BaseTitle)(_templateObject4());\n_c4 = CompleteTitle;\nvar TitleRow = styled(Flex.Row)(_templateObject5());\n_c5 = TitleRow;\nexport var TaskCard = function TaskCard(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var id = data.id,\n      name = data.name,\n      description = data.description,\n      status = data.status;\n  var router = useRouter();\n\n  function refreshData() {\n    router.replace(router.asPath);\n  }\n\n  function updateTaskStatus() {\n    return _updateTaskStatus.apply(this, arguments);\n  }\n\n  function _updateTaskStatus() {\n    _updateTaskStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var client, udpatedStatus;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              client = new ApolloClient({\n                uri: 'http://localhost:3000/graphql',\n                cache: new InMemoryCache()\n              });\n              udpatedStatus = status === 'COMPLETE' ? 'TODO' : 'COMPLETE';\n              _context.next = 4;\n              return client.mutate({\n                mutation: gql(_templateObject6()),\n                variables: {\n                  id: id,\n                  status: udpatedStatus\n                }\n              });\n\n            case 4:\n              refreshData();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _updateTaskStatus.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BaseCard, {\n    children: [name && (status === 'COMPLETE' ? /*#__PURE__*/_jsxDEV(CompleteTitle, {\n      children: /*#__PURE__*/_jsxDEV(TitleRow, {\n        children: [/*#__PURE__*/_jsxDEV(Text.Subtitle, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          type: \"checkbox\",\n          checked: status === 'COMPLETE',\n          onChange: updateTaskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, _this) : /*#__PURE__*/_jsxDEV(BaseTitle, {\n      children: /*#__PURE__*/_jsxDEV(TitleRow, {\n        children: [/*#__PURE__*/_jsxDEV(Text.Subtitle, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          type: \"checkbox\",\n          checked: status === 'COMPLETE',\n          onChange: updateTaskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, _this)), description && /*#__PURE__*/_jsxDEV(BaseContent, {\n      children: /*#__PURE__*/_jsxDEV(Text.Text, {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TaskCard, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c6 = TaskCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"BaseCard\");\n$RefreshReg$(_c2, \"BaseContent\");\n$RefreshReg$(_c3, \"BaseTitle\");\n$RefreshReg$(_c4, \"CompleteTitle\");\n$RefreshReg$(_c5, \"TitleRow\");\n$RefreshReg$(_c6, \"TaskCard\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx"],"names":["React","useRouter","styled","ApolloClient","gql","InMemoryCache","Flex","Checkbox","Text","BaseCard","div","BaseContent","BaseTitle","CompleteTitle","TitleRow","Row","TaskCard","data","id","name","description","status","router","refreshData","replace","asPath","updateTaskStatus","client","uri","cache","udpatedStatus","mutate","mutation","variables"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { TaskCardDataFragment } from '../../typedDocumentNodes';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\nimport { Flex, Checkbox, Text } from '../../primitives';\nexport interface TaskCardProps {\n  data: TaskCardDataFragment;\n}\n\nconst BaseCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  padding: 0 0 32px;\n  margin: 20px;\n  margin-left: 100px;\n  width: 300px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.05), 0 0px 40px rgba(0, 0, 0, 0.08);\n  border-radius: 20px;\n  background-color: #0a1944;\n`;\n\nconst BaseContent = styled.div`\n  padding: 10px;\n  color: #97b4ff;\n`;\n\nconst BaseTitle = styled.div`\n  padding: 10px;\n  color: #ffffff;\n  font-weight: bold;\n  font-size: 1.5em;\n  border-bottom: 2px solid #8916ff;\n  margin: 5px;\n`;\n\nconst CompleteTitle = styled(BaseTitle)`\n  color: #97b4ff;\n  border-bottom: 2px solid #97b4ff;\n`;\n\nconst TitleRow = styled(Flex.Row)`\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TaskCard: FunctionComponent<TaskCardProps> = ({ data }) => {\n  const { id, name, description, status } = data;\n  const router = useRouter();\n  function refreshData() {\n    router.replace(router.asPath);\n  }\n  async function updateTaskStatus() {\n    const client = new ApolloClient({\n      uri: 'http://localhost:3000/graphql',\n      cache: new InMemoryCache(),\n    });\n    const udpatedStatus = status === 'COMPLETE' ? 'TODO' : 'COMPLETE';\n    await client.mutate({\n      mutation: gql`\n        mutation updateTaskStatus($id: Int!, $status: String!) {\n          updateTask(id: $id, status: $status) {\n            name\n            description\n            status\n          }\n        }\n      `,\n      variables: { id: id, status: udpatedStatus },\n    });\n\n    refreshData();\n  }\n  return (\n    <BaseCard>\n      {name &&\n        (status === 'COMPLETE' ? (\n          <CompleteTitle>\n            <TitleRow>\n              <Text.Subtitle>{name}</Text.Subtitle>\n              <Checkbox\n                type=\"checkbox\"\n                checked={status === 'COMPLETE'}\n                onChange={updateTaskStatus}\n              />\n            </TitleRow>\n          </CompleteTitle>\n        ) : (\n          <BaseTitle>\n            <TitleRow>\n              <Text.Subtitle>{name}</Text.Subtitle>\n              <Checkbox\n                type=\"checkbox\"\n                checked={status === 'COMPLETE'}\n                onChange={updateTaskStatus}\n              />\n            </TitleRow>\n          </BaseTitle>\n        ))}\n      {description && (\n        <BaseContent>\n          <Text.Text>{description}</Text.Text>\n        </BaseContent>\n      )}\n    </BaseCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}