{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx\";\nimport React from 'react';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\nimport { TaskList } from '../components/TaskList/taskList';\nconst HOME_PAGE_QUERY = gql`\n  query HomePageQuery {\n    ...Tasks\n  }\n  ${TaskList.fragments.tasks}\n`;\n\nconst Home = ({\n  tasks\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache()\n  });\n  const res = await client.query({\n    query: HOME_PAGE_QUERY\n  });\n  const {\n    viewTasks\n  } = res.data;\n  return {\n    props: {\n      tasks: viewTasks\n    }\n  };\n};\nexport default Home;","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx"],"names":["React","ApolloClient","gql","InMemoryCache","TaskList","HOME_PAGE_QUERY","fragments","tasks","Home","getServerSideProps","client","uri","cache","res","query","viewTasks","data","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,aAA5B,QAAiD,gBAAjD;AAEA,SAASC,QAAT,QAAyB,iCAAzB;AAMA,MAAMC,eAAe,GAAGH,GAAI;AAC5B;AACA;AACA;AACA,IAAIE,QAAQ,CAACE,SAAT,CAAmBC,KAAM;AAC7B,CALA;;AAOA,MAAMC,IAA6B,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAe;AACnD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CARD;;AAUA,OAAO,MAAME,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BU,IAAAA,GAAG,EAAE,+BADyB;AAE9BC,IAAAA,KAAK,EAAE,IAAIT,aAAJ;AAFuB,GAAjB,CAAf;AAKA,QAAMU,GAAG,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAoC;AACpDA,IAAAA,KAAK,EAAET;AAD6C,GAApC,CAAlB;AAIA,QAAM;AAAEU,IAAAA;AAAF,MAAgBF,GAAG,CAACG,IAA1B;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEV,MAAAA,KAAK,EAAEQ;AAAT;AAAT,GAAP;AACD,CAZM;AAcP,eAAeP,IAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\nimport { Task } from '../../shared/types/graphql';\nimport { TaskList } from '../components/TaskList/taskList';\n\ninterface HomePageProps {\n  tasks: Task[];\n}\n\nconst HOME_PAGE_QUERY = gql`\n  query HomePageQuery {\n    ...Tasks\n  }\n  ${TaskList.fragments.tasks}\n`;\n\nconst Home: NextPage<HomePageProps> = ({ tasks }) => {\n  return (\n    <>\n      <h1>Hello, World!</h1>\n      <h2>Tasks:</h2>\n      <TaskList tasks={tasks} />\n    </>\n  );\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache(),\n  });\n\n  const res = await client.query<{ viewTasks: Task[] }>({\n    query: HOME_PAGE_QUERY,\n  });\n\n  const { viewTasks } = res.data;\n  return { props: { tasks: viewTasks } };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}