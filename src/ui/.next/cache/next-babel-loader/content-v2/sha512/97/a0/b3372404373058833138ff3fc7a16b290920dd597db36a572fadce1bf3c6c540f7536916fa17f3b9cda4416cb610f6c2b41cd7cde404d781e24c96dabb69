{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/_app.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  body {\\n    font-family: 'Varela Round', sans-serif;\\n    background-color: #142250;\\n    color: #97b4ff;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport App from 'next/app';\nimport { createGlobalStyle } from 'styled-components';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nvar GlobalStyles = createGlobalStyle(_templateObject());\n_c = GlobalStyles;\nvar client = new ApolloClient({\n  uri: 'http://localhost:3000/graphql',\n  cache: new InMemoryCache()\n});\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return App.getInitialProps(appContext);\n\n          case 2:\n            appProps = _context.sent;\n            console.log('appProps >>', appProps);\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyles\");\n$RefreshReg$(_c2, \"MyApp\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/_app.tsx"],"names":["App","createGlobalStyle","ApolloClient","ApolloProvider","InMemoryCache","GlobalStyles","client","uri","cache","MyApp","Component","pageProps","getInitialProps","appContext","appProps","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAA0C,UAA1C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AAEA,IAAMC,YAAY,GAAGJ,iBAAH,mBAAlB;KAAMI,Y;AAQN,IAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,IAAMK,KAAK,GAAG,SAARA,KAAQ,OAAwC;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AACpD,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,SAAD,oBAAeK,SAAf;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAPD;;MAAMF,K;;AASNA,KAAK,CAACG,eAAN;AAAA,uEAAwB,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCb,GAAG,CAACY,eAAJ,CAAoBC,UAApB,CADD;;AAAA;AAChBC,YAAAA,QADgB;AAEtBC,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,QAA3B;AAFsB,+DAGVA,QAHU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeL,KAAf","sourcesContent":["import App, { AppProps, AppContext } from 'next/app';\nimport { createGlobalStyle } from 'styled-components';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    font-family: 'Varela Round', sans-serif;\n    background-color: #142250;\n    color: #97b4ff;\n  }\n`;\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:3000/graphql',\n  cache: new InMemoryCache(),\n});\n\nconst MyApp = ({ Component, pageProps }: AppProps) => {\n  return (\n    <ApolloProvider client={client}>\n      <GlobalStyles />\n      <Component {...pageProps} />\n    </ApolloProvider>\n  );\n};\n\nMyApp.getInitialProps = async (appContext: AppContext) => {\n  const appProps = await App.getInitialProps(appContext);\n  console.log('appProps >>', appProps);\n  return { ...appProps };\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}