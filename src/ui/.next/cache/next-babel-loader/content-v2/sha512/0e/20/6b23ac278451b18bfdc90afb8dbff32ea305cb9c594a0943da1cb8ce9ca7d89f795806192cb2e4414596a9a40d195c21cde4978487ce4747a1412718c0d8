{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Tasks on Query {\\n      viewTasks {\\n        ...Details\\n      }\\n    }\\n    \", \"\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { gql } from '@apollo/client';\nimport React from 'react';\nimport { TaskCard } from '../TaskCard/taskCard';\nexport var TaskList = function TaskList(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.viewTasks.map(function (task, index) {\n      return /*#__PURE__*/_jsxDEV(TaskCard, _objectSpread({}, task), index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n};\n_c = TaskList;\nTaskList.fragments = {\n  tasks: gql(_templateObject(), TaskCard.fragments.details)\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx"],"names":["gql","React","TaskCard","TaskList","data","viewTasks","map","task","index","fragments","tasks","details"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AAMA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA6B;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AACnD,sBACE;AAAA,cACGA,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,UAACC,IAAD,EAAOC,KAAP;AAAA,0BAClB,QAAC,QAAD,oBAA0BD,IAA1B,GAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,eADkB;AAAA,KAAnB;AADH,mBADF;AAOD,CARM;KAAML,Q;AAUbA,QAAQ,CAACM,SAAT,GAAqB;AACnBC,EAAAA,KAAK,EAAEV,GAAF,oBAMDE,QAAQ,CAACO,SAAT,CAAmBE,OANlB;AADc,CAArB","sourcesContent":["import { gql } from '@apollo/client';\nimport React from 'react';\nimport { Task } from '../../../shared/types/graphql';\nimport { TaskCard } from '../TaskCard/taskCard';\n\ninterface TaskListProps {\n  data: { viewTasks: Task[] };\n}\n\nexport const TaskList = ({ data }: TaskListProps) => {\n  return (\n    <>\n      {data.viewTasks.map((task, index) => (\n        <TaskCard key={index} {...task} />\n      ))}\n    </>\n  );\n};\n\nTaskList.fragments = {\n  tasks: gql`\n    fragment Tasks on Query {\n      viewTasks {\n        ...Details\n      }\n    }\n    ${TaskCard.fragments.details}\n  `,\n};\n"]},"metadata":{},"sourceType":"module"}