{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport { Flex, Checkbox, Text, Card } from '../../primitives';\nimport { UPDATE_TASK_STATUS } from '../../mutations/updateTaskStatus';\nvar TitleRow = styled(Flex.Row)(_templateObject());\n_c = TitleRow;\nexport var TaskCard = function TaskCard(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var id = data.id,\n      name = data.name,\n      description = data.description,\n      status = data.status;\n  var router = useRouter();\n\n  var _useMutation = useMutation(UPDATE_TASK_STATUS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateTaskStatus = _useMutation2[0];\n\n  function refreshData() {\n    router.replace(router.asPath);\n  }\n\n  function updateStatus() {\n    return _updateStatus.apply(this, arguments);\n  }\n\n  function _updateStatus() {\n    _updateStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var udpatedStatus;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              udpatedStatus = status === 'COMPLETE' ? 'TODO' : 'COMPLETE';\n              _context.next = 3;\n              return updateTaskStatus({\n                variables: {\n                  id: id,\n                  status: udpatedStatus\n                }\n              });\n\n            case 3:\n              refreshData();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _updateStatus.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    complete: status === 'COMPLETE',\n    title: /*#__PURE__*/_jsxDEV(TitleRow, {\n      children: [/*#__PURE__*/_jsxDEV(Text.Subtitle, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: status === 'COMPLETE',\n        onChange: updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, _this),\n    content: /*#__PURE__*/_jsxDEV(Text.Text, {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TaskCard, \"SvmKgvoh3BnH3gBoOb+EGlcccfY=\", false, function () {\n  return [useRouter, useMutation];\n});\n\n_c2 = TaskCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TitleRow\");\n$RefreshReg$(_c2, \"TaskCard\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx"],"names":["React","useRouter","styled","useMutation","Flex","Checkbox","Text","Card","UPDATE_TASK_STATUS","TitleRow","Row","TaskCard","data","id","name","description","status","router","updateTaskStatus","refreshData","replace","asPath","updateStatus","udpatedStatus","variables"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAA2CC,WAA3C,QAA8D,gBAA9D;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,IAA/B,QAA2C,kBAA3C;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AAKA,IAAMC,QAAQ,GAAGP,MAAM,CAACE,IAAI,CAACM,GAAN,CAAT,mBAAd;KAAMD,Q;AAKN,OAAO,IAAME,QAA0C,GAAG,SAA7CA,QAA6C,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAAA,MAC9DC,EAD8D,GAC5BD,IAD4B,CAC9DC,EAD8D;AAAA,MAC1DC,IAD0D,GAC5BF,IAD4B,CAC1DE,IAD0D;AAAA,MACpDC,WADoD,GAC5BH,IAD4B,CACpDG,WADoD;AAAA,MACvCC,MADuC,GAC5BJ,IAD4B,CACvCI,MADuC;AAEtE,MAAMC,MAAM,GAAGhB,SAAS,EAAxB;;AAFsE,qBAG3CE,WAAW,CAACK,kBAAD,CAHgC;AAAA;AAAA,MAG/DU,gBAH+D;;AAKtE,WAASC,WAAT,GAAuB;AACrBF,IAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,MAAtB;AACD;;AAPqE,WAQvDC,YARuD;AAAA;AAAA;;AAAA;AAAA,6EAQtE;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,aADR,GACwBP,MAAM,KAAK,UAAX,GAAwB,MAAxB,GAAiC,UADzD;AAAA;AAAA,qBAGQE,gBAAgB,CAAC;AACrBM,gBAAAA,SAAS,EAAE;AACTX,kBAAAA,EAAE,EAAEA,EADK;AAETG,kBAAAA,MAAM,EAAEO;AAFC;AADU,eAAD,CAHxB;;AAAA;AASEJ,cAAAA,WAAW;;AATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARsE;AAAA;AAAA;;AAmBtE,sBACE,QAAC,IAAD;AACE,IAAA,QAAQ,EAAEH,MAAM,KAAK,UADvB;AAEE,IAAA,KAAK,eACH,QAAC,QAAD;AAAA,8BACE,QAAC,IAAD,CAAM,QAAN;AAAA,kBAAgBF;AAAhB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEE,MAAM,KAAK,UAA9B;AAA0C,QAAA,QAAQ,EAAEM;AAApD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ;AAQE,IAAA,OAAO,eAAE,QAAC,IAAD,CAAM,IAAN;AAAA,gBAAYP;AAAZ;AAAA;AAAA;AAAA;AAAA;AARX;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA/BM;;GAAMJ,Q;UAEIV,S,EACYE,W;;;MAHhBQ,Q","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { TaskCardDataFragment } from '../../typedDocumentNodes';\nimport { ApolloClient, gql, InMemoryCache, useMutation } from '@apollo/client';\nimport { Flex, Checkbox, Text, Card } from '../../primitives';\nimport { UPDATE_TASK_STATUS } from '../../mutations/updateTaskStatus';\nexport interface TaskCardProps {\n  data: TaskCardDataFragment;\n}\n\nconst TitleRow = styled(Flex.Row)`\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TaskCard: FunctionComponent<TaskCardProps> = ({ data }) => {\n  const { id, name, description, status } = data;\n  const router = useRouter();\n  const [updateTaskStatus] = useMutation(UPDATE_TASK_STATUS);\n\n  function refreshData() {\n    router.replace(router.asPath);\n  }\n  async function updateStatus() {\n    const udpatedStatus = status === 'COMPLETE' ? 'TODO' : 'COMPLETE';\n\n    await updateTaskStatus({\n      variables: {\n        id: id,\n        status: udpatedStatus,\n      },\n    });\n    refreshData();\n  }\n  return (\n    <Card\n      complete={status === 'COMPLETE'}\n      title={\n        <TitleRow>\n          <Text.Subtitle>{name}</Text.Subtitle>\n          <Checkbox checked={status === 'COMPLETE'} onChange={updateStatus} />\n        </TitleRow>\n      }\n      content={<Text.Text>{description}</Text.Text>}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}