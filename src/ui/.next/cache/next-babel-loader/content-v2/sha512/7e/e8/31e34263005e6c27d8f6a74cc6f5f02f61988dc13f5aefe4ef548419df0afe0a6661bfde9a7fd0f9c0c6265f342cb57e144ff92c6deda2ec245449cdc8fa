{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport 'antd/dist/antd.css';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\nconst BaseCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  padding: 0 0 32px;\n  margin: 20px;\n  margin-left: 100px;\n  width: 300px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.05), 0 0px 40px rgba(0, 0, 0, 0.08);\n  border-radius: 20px;\n  background-color: #0a1944;\n`;\nconst BaseContent = styled.div`\n  padding: 10px;\n  color: #97b4ff;\n`;\nconst BaseTitle = styled.div`\n  padding: 10px;\n  color: #ffffff;\n  font-weight: bold;\n  font-size: 1.5em;\n  border-bottom: 2px solid #8916ff;\n  margin: 5px;\n`;\nconst CompleteTitle = styled(BaseTitle)`\n  color: #97b4ff;\n  border-bottom: 2px solid #97b4ff;\n`;\nexport const TaskCard = ({\n  data\n}) => {\n  const {\n    id,\n    name,\n    description,\n    status\n  } = data;\n  const router = useRouter();\n\n  function refreshData() {\n    router.replace(router.asPath);\n  }\n\n  async function updateTaskStatus() {\n    const client = new ApolloClient({\n      uri: 'http://localhost:3000/graphql',\n      cache: new InMemoryCache()\n    });\n    const udpatedStatus = status === 'COMPLETE' ? 'TODO' : 'COMPLETE';\n    await client.mutate({\n      mutation: gql`\n        mutation updateTaskStatus($id: Int!, $status: String!) {\n          updateTask(id: $id, status: $status) {\n            name\n            description\n            status\n          }\n        }\n      `,\n      variables: {\n        id: id,\n        status: udpatedStatus\n      }\n    });\n    refreshData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(BaseCard, {\n    children: [name && (status === 'COMPLETE' ? /*#__PURE__*/_jsxDEV(CompleteTitle, {\n      children: [name, ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: status === 'COMPLETE',\n        onChange: updateTaskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(BaseTitle, {\n      children: [name, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: status === 'COMPLETE',\n        onChange: updateTaskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)), description && /*#__PURE__*/_jsxDEV(BaseContent, {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx"],"names":["React","useRouter","styled","ApolloClient","gql","InMemoryCache","BaseCard","div","BaseContent","BaseTitle","CompleteTitle","TaskCard","data","id","name","description","status","router","refreshData","replace","asPath","updateTaskStatus","client","uri","cache","udpatedStatus","mutate","mutation","variables"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,oBAAP;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,aAA5B,QAAiD,gBAAjD;AAMA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMC,WAAW,GAAGN,MAAM,CAACK,GAAI;AAC/B;AACA;AACA,CAHA;AAKA,MAAME,SAAS,GAAGP,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMG,aAAa,GAAGR,MAAM,CAACO,SAAD,CAAY;AACxC;AACA;AACA,CAHA;AAKA,OAAO,MAAME,QAA0C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACtE,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,MAAoCJ,IAA1C;AACA,QAAMK,MAAM,GAAGhB,SAAS,EAAxB;;AACA,WAASiB,WAAT,GAAuB;AACrBD,IAAAA,MAAM,CAACE,OAAP,CAAeF,MAAM,CAACG,MAAtB;AACD;;AACD,iBAAeC,gBAAf,GAAkC;AAChC,UAAMC,MAAM,GAAG,IAAInB,YAAJ,CAAiB;AAC9BoB,MAAAA,GAAG,EAAE,+BADyB;AAE9BC,MAAAA,KAAK,EAAE,IAAInB,aAAJ;AAFuB,KAAjB,CAAf;AAIA,UAAMoB,aAAa,GAAGT,MAAM,KAAK,UAAX,GAAwB,MAAxB,GAAiC,UAAvD;AACA,UAAMM,MAAM,CAACI,MAAP,CAAc;AAClBC,MAAAA,QAAQ,EAAEvB,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OATwB;AAUlBwB,MAAAA,SAAS,EAAE;AAAEf,QAAAA,EAAE,EAAEA,EAAN;AAAUG,QAAAA,MAAM,EAAES;AAAlB;AAVO,KAAd,CAAN;AAaAP,IAAAA,WAAW;AACZ;;AACD,sBACE,QAAC,QAAD;AAAA,eACGJ,IAAI,KACFE,MAAM,KAAK,UAAX,gBACC,QAAC,aAAD;AAAA,iBACGF,IADH,EACS,GADT,eAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAEE,MAAM,KAAK,UAFtB;AAGE,QAAA,QAAQ,EAAEK;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFF,EAMK,GANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAUC,QAAC,SAAD;AAAA,iBACGP,IADH,eAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAEE,MAAM,KAAK,UAFtB;AAGE,QAAA,QAAQ,EAAEK;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXC,CADP,EAqBGN,WAAW,iBAAI,QAAC,WAAD;AAAA,gBAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,YArBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CApDM","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { TaskCardDataFragment } from '../../typedDocumentNodes';\nimport 'antd/dist/antd.css';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\n\nexport interface TaskCardProps {\n  data: TaskCardDataFragment;\n}\n\nconst BaseCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  padding: 0 0 32px;\n  margin: 20px;\n  margin-left: 100px;\n  width: 300px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.05), 0 0px 40px rgba(0, 0, 0, 0.08);\n  border-radius: 20px;\n  background-color: #0a1944;\n`;\n\nconst BaseContent = styled.div`\n  padding: 10px;\n  color: #97b4ff;\n`;\n\nconst BaseTitle = styled.div`\n  padding: 10px;\n  color: #ffffff;\n  font-weight: bold;\n  font-size: 1.5em;\n  border-bottom: 2px solid #8916ff;\n  margin: 5px;\n`;\n\nconst CompleteTitle = styled(BaseTitle)`\n  color: #97b4ff;\n  border-bottom: 2px solid #97b4ff;\n`;\n\nexport const TaskCard: FunctionComponent<TaskCardProps> = ({ data }) => {\n  const { id, name, description, status } = data;\n  const router = useRouter();\n  function refreshData() {\n    router.replace(router.asPath);\n  }\n  async function updateTaskStatus() {\n    const client = new ApolloClient({\n      uri: 'http://localhost:3000/graphql',\n      cache: new InMemoryCache(),\n    });\n    const udpatedStatus = status === 'COMPLETE' ? 'TODO' : 'COMPLETE';\n    await client.mutate({\n      mutation: gql`\n        mutation updateTaskStatus($id: Int!, $status: String!) {\n          updateTask(id: $id, status: $status) {\n            name\n            description\n            status\n          }\n        }\n      `,\n      variables: { id: id, status: udpatedStatus },\n    });\n\n    refreshData();\n  }\n  return (\n    <BaseCard>\n      {name &&\n        (status === 'COMPLETE' ? (\n          <CompleteTitle>\n            {name}{' '}\n            <input\n              type=\"checkbox\"\n              checked={status === 'COMPLETE'}\n              onChange={updateTaskStatus}\n            />{' '}\n          </CompleteTitle>\n        ) : (\n          <BaseTitle>\n            {name}\n            <input\n              type=\"checkbox\"\n              checked={status === 'COMPLETE'}\n              onChange={updateTaskStatus}\n            />\n          </BaseTitle>\n        ))}\n      {description && <BaseContent>{description}</BaseContent>}\n    </BaseCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}