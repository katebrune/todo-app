{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment Details on Task {\\n      name\\n      description\\n      status\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport React from 'react';\nexport var TaskCard = function TaskCard(_ref) {\n  var name = _ref.name,\n      description = _ref.description,\n      status = _ref.status;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}; // this is called colocated fragments\n\n_c = TaskCard;\nTaskCard.fragments = {\n  details: gql(_templateObject())\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskCard/taskCard.tsx"],"names":["gql","React","TaskCard","name","description","status","fragments","details"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAyC,OAAzC;AAQA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkD;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,MAAzCC,WAAyC,QAAzCA,WAAyC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AACxE,sBACE;AAAA,4BACE;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,6BAAaE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA,kBADF;AAOD,CARM,C,CAUP;;KAVaF,Q;AAWbA,QAAQ,CAACI,SAAT,GAAqB;AACnBC,EAAAA,OAAO,EAAEP,GAAF;AADY,CAArB","sourcesContent":["import gql from 'graphql-tag';\nimport React, { FunctionComponent } from 'react';\n\nexport interface TaskCardProps {\n  name: string;\n  description: string;\n  status: string;\n}\n\nexport const TaskCard = ({ name, description, status }: TaskCardProps) => {\n  return (\n    <>\n      <h4>{name}</h4>\n      <h5>Status: {status}</h5>\n      <h6>{description}</h6>\n    </>\n  );\n};\n\n// this is called colocated fragments\nTaskCard.fragments = {\n  details: gql`\n    fragment Details on Task {\n      name\n      description\n      status\n    }\n  `,\n};\n"]},"metadata":{},"sourceType":"module"}