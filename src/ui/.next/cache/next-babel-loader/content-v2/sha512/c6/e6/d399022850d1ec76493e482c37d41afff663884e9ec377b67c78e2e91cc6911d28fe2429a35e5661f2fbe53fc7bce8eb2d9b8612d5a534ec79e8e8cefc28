{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/_app.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from 'next/app';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport 'antd/dist/antd.css';\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache()\n  });\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return App.getInitialProps(appContext);\n\n          case 2:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/_app.tsx"],"names":["App","ApolloClient","ApolloProvider","InMemoryCache","MyApp","Component","pageProps","client","uri","cache","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAA0C,UAA1C;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,OAAO,oBAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAwC;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AACpD,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,IAAAA,GAAG,EAAE,+BADyB;AAE9BC,IAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,GAAjB,CAAf;AAIA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEI,MAAxB;AAAA,2BACE,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAVD;;KAAMF,K;;AAYNA,KAAK,CAACM,eAAN;AAAA,uEAAwB,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCX,GAAG,CAACU,eAAJ,CAAoBC,UAApB,CADD;;AAAA;AAChBC,YAAAA,QADgB;AAAA,+DAGVA,QAHU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeR,KAAf","sourcesContent":["import App, { AppProps, AppContext } from 'next/app';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport 'antd/dist/antd.css';\n\nconst MyApp = ({ Component, pageProps }: AppProps) => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache(),\n  });\n  return (\n    <ApolloProvider client={client}>\n      <Component {...pageProps} />\n    </ApolloProvider>\n  );\n};\n\nMyApp.getInitialProps = async (appContext: AppContext) => {\n  const appProps = await App.getInitialProps(appContext);\n\n  return { ...appProps };\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}