{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query HomePageQuery {\\n    ...Tasks\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { gql } from '@apollo/client';\nimport { TaskList } from '../components/TaskList/taskList';\nvar HOME_PAGE_QUERY = gql(_templateObject(), TaskList.fragments.tasks);\n\nvar Home = function Home(_ref) {\n  var tasks = _ref.tasks;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx"],"names":["React","gql","TaskList","HOME_PAGE_QUERY","fragments","tasks","Home"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAuBC,GAAvB,QAAiD,gBAAjD;AAEA,SAASC,QAAT,QAAyB,iCAAzB;AAMA,IAAMC,eAAe,GAAGF,GAAH,oBAIjBC,QAAQ,CAACE,SAAT,CAAmBC,KAJF,CAArB;;AAOA,IAAMC,IAA6B,GAAG,SAAhCA,IAAgC,OAAe;AAAA,MAAZD,KAAY,QAAZA,KAAY;AACnD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA,kBADF;AAOD,CARD;;KAAMC,I;;AA0BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\nimport { Task } from '../../shared/types/graphql';\nimport { TaskList } from '../components/TaskList/taskList';\n\ninterface HomePageProps {\n  tasks: Task[];\n}\n\nconst HOME_PAGE_QUERY = gql`\n  query HomePageQuery {\n    ...Tasks\n  }\n  ${TaskList.fragments.tasks}\n`;\n\nconst Home: NextPage<HomePageProps> = ({ tasks }) => {\n  return (\n    <>\n      <h1>Hello, World!</h1>\n      <h2>Tasks:</h2>\n      <TaskList tasks={tasks} />\n    </>\n  );\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache(),\n  });\n\n  console.log(HomePageQuery);\n\n  const res = await client.query<{ viewTasks: Task[] }>({\n    query: HomePageQuery,\n  });\n\n  const { viewTasks } = res.data;\n  return { props: { tasks: viewTasks } };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}