{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx\";\nimport React from 'react';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport { Row, Col } from 'antd';\nimport { TaskList } from '../components/TaskList/taskList';\nimport { CompleteListDataFragmentDoc, HomePageDocument, InProgressListDataFragmentDoc, TodoListDataFragmentDoc } from '../typedDocumentNodes';\n\nconst Home = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          data: filter(TodoListDataFragmentDoc, data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          data: filter(InProgressListDataFragmentDoc, data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          data: filter(CompleteListDataFragmentDoc, data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache()\n  });\n  console.log('QUERY', HomePageDocument);\n  const res = await client.query({\n    query: HomePageDocument\n  });\n  return {\n    props: res\n  };\n};\nexport default Home;","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/pages/index.tsx"],"names":["React","ApolloClient","InMemoryCache","filter","Row","Col","TaskList","CompleteListDataFragmentDoc","HomePageDocument","InProgressListDataFragmentDoc","TodoListDataFragmentDoc","Home","data","getServerSideProps","client","uri","cache","console","log","res","query","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SACEC,2BADF,EAEEC,gBAFF,EAIEC,6BAJF,EAKEC,uBALF,QAMO,uBANP;;AAYA,MAAMC,IAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAClD,sBACE;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAET,MAAM,CAACO,uBAAD,EAA0BE,IAA1B;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAET,MAAM,CAACM,6BAAD,EAAgCG,IAAhC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAET,MAAM,CAACI,2BAAD,EAA8BK,IAA9B;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD,CAhBD;;AAkBA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,IAAAA,GAAG,EAAE,+BADyB;AAE9BC,IAAAA,KAAK,EAAE,IAAId,aAAJ;AAFuB,GAAjB,CAAf;AAKAe,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,gBAArB;AAEA,QAAMW,GAAG,GAAG,MAAML,MAAM,CAACM,KAAP,CAA4B;AAC5CA,IAAAA,KAAK,EAAEZ;AADqC,GAA5B,CAAlB;AAIA,SAAO;AAAEa,IAAAA,KAAK,EAAEF;AAAT,GAAP;AACD,CAbM;AAeP,eAAeR,IAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { filter } from 'graphql-anywhere';\nimport { Row, Col } from 'antd';\nimport { TaskList } from '../components/TaskList/taskList';\nimport {\n  CompleteListDataFragmentDoc,\n  HomePageDocument,\n  HomePageQuery,\n  InProgressListDataFragmentDoc,\n  TodoListDataFragmentDoc,\n} from '../typedDocumentNodes';\n\ninterface HomePageProps {\n  data: HomePageQuery;\n}\n\nconst Home: NextPage<HomePageProps> = ({ data }) => {\n  return (\n    <>\n      <Row>\n        <Col span={8}>\n          <TaskList data={filter(TodoListDataFragmentDoc, data)} />\n        </Col>\n        <Col span={8}>\n          <TaskList data={filter(InProgressListDataFragmentDoc, data)} />\n        </Col>\n        <Col span={8}>\n          <TaskList data={filter(CompleteListDataFragmentDoc, data)} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport const getServerSideProps = async () => {\n  const client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache(),\n  });\n\n  console.log('QUERY', HomePageDocument);\n\n  const res = await client.query<HomePageQuery>({\n    query: HomePageDocument,\n  });\n\n  return { props: res };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}