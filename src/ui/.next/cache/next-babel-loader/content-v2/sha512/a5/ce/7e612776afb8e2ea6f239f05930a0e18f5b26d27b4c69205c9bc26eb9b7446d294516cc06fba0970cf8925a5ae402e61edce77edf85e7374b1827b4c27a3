{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  fragment TaskListData on Query {\\n    viewTasks {\\n      ...TaskCardData\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { filter } from 'graphql-anywhere';\nimport { gql } from '@apollo/client';\nimport React from 'react';\nimport { TaskCardDataFragmentDoc } from '../../typedDocumentNodes';\nimport { TaskCard } from '../TaskCard/taskCard';\nexport var TaskList = function TaskList(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.viewTasks.map(function (task, index) {\n      return /*#__PURE__*/_jsxDEV(TaskCard, {\n        data: filter(TaskCardDataFragmentDoc, task)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n};\n_c = TaskList;\nTaskList.fragment = gql(_templateObject(), TaskCard.fragment[0]);\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/kbrune/Documents/learning/nestjs-nextjs/app/src/ui/components/TaskList/taskList.tsx"],"names":["filter","gql","React","TaskCardDataFragmentDoc","TaskCard","TaskList","data","viewTasks","map","task","index","fragment"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,uBADF,QAGO,0BAHP;AAIA,SAASC,QAAT,QAAyB,sBAAzB;AAMA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA6B;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AACnD,sBACE;AAAA,cACGA,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,UAACC,IAAD,EAAOC,KAAP;AAAA,0BAClB,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAEV,MAAM,CAACG,uBAAD,EAA0BM,IAA1B;AAAlC,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,eADkB;AAAA,KAAnB;AADH,mBADF;AAOD,CARM;KAAML,Q;AAUbA,QAAQ,CAACM,QAAT,GAAoBV,GAApB,oBAMIG,QAAQ,CAACO,QAAT,CAAkB,CAAlB,CANJ","sourcesContent":["import { filter } from 'graphql-anywhere';\nimport { gql } from '@apollo/client';\nimport React from 'react';\nimport {\n  TaskCardDataFragmentDoc,\n  TaskListDataFragment,\n} from '../../typedDocumentNodes';\nimport { TaskCard } from '../TaskCard/taskCard';\n\ninterface TaskListProps {\n  data: TaskListDataFragment;\n}\n\nexport const TaskList = ({ data }: TaskListProps) => {\n  return (\n    <>\n      {data.viewTasks.map((task, index) => (\n        <TaskCard key={index} data={filter(TaskCardDataFragmentDoc, task)} />\n      ))}\n    </>\n  );\n};\n\nTaskList.fragment = gql`\n  fragment TaskListData on Query {\n    viewTasks {\n      ...TaskCardData\n    }\n  }\n  ${TaskCard.fragment[0]}\n`;\n"]},"metadata":{},"sourceType":"module"}